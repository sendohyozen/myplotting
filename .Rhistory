# 依赖包
usethis::use_package (package = "dplyr", type = "Imports")
usethis::use_package (package = "tidyr", type = "Imports")
usethis::use_package (package = "ggplot2", type = "Imports")
usethis::use_package (package = "ggsci", type = "Imports")
usethis::use_package (package = "ggrepel", type = "Imports")
usethis::use_package (package = "factoextra", type = "Imports")
usethis::use_package (package = "ggchicklet", type = "Imports")
devtools::document()
devtools::build()
library(myplotting)
devtools::document()
devtools::build()
library(myplotting)
devtools::document()
devtools::build()
library(myplotting)
devtools::document()
devtools::build()
library(myplotting)
ggpie_identity <- function(data, group, value, labs,
pal=ggsci::pal_futurama(alpha = 0.8)(12),
chinese=F, lab.size =14,
legend.position = 'top', legend.size =12){
if(chinese==T){
font.family = "STHeitiSC-Medium"
}else{
font.family = "Arial"
}
# plotting data
if(missing(labs)){
# if not labs on pie provided, use percentage instead
plot_df = data.frame(value = data[[value]],
fill = data[[group]],
label = scales::percent(data[[value]], accuracy = 0.01))
}else{
plot_df = data.frame(value = data[[value]],
fill = data[[group]],
label = data[[labs]])
}
# plotting
p = ggpubr::ggpie(plot_df, x = value, label = labs,
lab.pos = "in", lab.font = "black",
fill = "fill", color = "white",
palette = pal,
font.family = font.family)
p = p + theme_void(base_size = lab.size, base_family = font.family) +
theme(legend.position = legend.position,
panel.grid=element_blank(),
legend.title = element_blank(),
legend.text= element_text(color="black", size=legend.size),
# title
plot.title = element_text(hjust = 0.5)
)
return(p)
}
devtools::document()
devtools::build()
library(myplotting)
usethis::use_package (package = "ggpubr", type = "Imports")
usethis::use_package (package = "ggpie", type = "Imports")
devtools::document()
devtools::build()
library(myplotting)
devtools::document()
devtools::build()
library(myplotting)
devtools::document()
devtools::build()
library(myplotting)
devtools::document()
devtools::build()
library(myplotting)
devtools::document()
devtools::build()
library(myplotting)
devtools::document()
devtools::build()
library(myplotting)
devtools::document()
devtools::build()
library(myplotting)
devtools::document()
devtools::build()
library(myplotting)
devtools::document()
devtools::build()
library(myplotting)
devtools::document()
devtools::build()
library(myplotting)
devtools::document()
devtools::build()
library(myplotting)
devtools::document()
devtools::build()
library(myplotting)
devtools::document()
devtools::build()
devtools::document()
devtools::build()
library(myplotting)
